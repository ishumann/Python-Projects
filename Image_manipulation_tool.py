#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.26
#  in conjunction with Tcl version 8.6
#    Jan 16, 2020 12:27:05 PM IST  platform: Windows NT

import sys

try:
    import tkinter as tk
except ImportError:
    import Tkinter as tk

try:
    import tkinter.ttk as ttk
    py3 = True
except ImportError:
    import ttk
    py3 = False

import Image_manipulation_tool_support as imts


def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global w, root
    root = tk.Tk()
    imts.set_Tk_var()
    top = MainWindow(root)
    imts.init(root, top)
    root.mainloop()


w = None


def create_MainWindow(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, rt
    rt = root
    w = tk.Toplevel(root)
    imts.set_Tk_var()
    top = MainWindow(w)
    imts.init(w, top, *args, **kwargs)
    return (w, top)


def destroy_MainWindow():
    global w
    w.destroy()
    w = None


class MainWindow:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9'  # X11 color: 'gray85'
        _ana1color = '#d9d9d9'  # X11 color: 'gray85'
        _ana2color = '#ececec'  # Closest X11 color: 'gray92'
        font9 = "-family {Segoe UI} -size 9 -weight normal -slant "  \
            "roman -underline 0 -overstrike 0"

        top.geometry("700x645")
        top.minsize(120, 1)
        top.maxsize(1370, 729)
        top.resizable(0, 0)
        top.title("Image Manipulation")
        top.configure(background="#ffffff")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")

        self.Label1 = tk.Label(top)
        self.Label1.place(relx=0.0, rely=-0.016, height=121, width=704)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(background="#5d69d8")
        self.Label1.configure(disabledforeground="#ffffff")
        self.Label1.configure(
            font="-family {Proxima Nova Cn Bl} -size 28 -weight bold")
        self.Label1.configure(foreground="#ffffff")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''Image Manipulation Toolkit''')

        self.Frame_one = tk.Frame(top)
        self.Frame_one.place(relx=0.014, rely=0.186,
                             relheight=0.194, relwidth=0.964)
        self.Frame_one.configure(relief='flat')
        self.Frame_one.configure(borderwidth="1")
        self.Frame_one.configure(background="#e5e5e5")
        self.Frame_one.configure(highlightbackground="#d9d9d9")
        self.Frame_one.configure(highlightcolor="black")

        self.source_path_btn = tk.Button(self.Frame_one)
        self.source_path_btn.place(
            relx=0.812, rely=0.152, height=30, width=107)
        self.source_path_btn.configure(activebackground="#ececec")
        self.source_path_btn.configure(activeforeground="#000000")
        self.source_path_btn.configure(background="#5d69d8")
        self.source_path_btn.configure(command=imts.source_file)
        self.source_path_btn.configure(disabledforeground="")
        self.source_path_btn.configure(
            font="-family {Gill Sans MT} -size 10 -weight bold")
        self.source_path_btn.configure(foreground="#ffffff")
        self.source_path_btn.configure(highlightbackground="#d9d9d9")
        self.source_path_btn.configure(highlightcolor="black")
        self.source_path_btn.configure(pady="0")
        self.source_path_btn.configure(relief="flat")
        self.source_path_btn.configure(takefocus="0")
        self.source_path_btn.configure(text='''Select''')

        self.source_path = tk.Entry(self.Frame_one)
        self.source_path.place(relx=0.228, rely=0.16,
                               height=30, relwidth=0.584)
        self.source_path.configure(background="white")
        self.source_path.configure(disabledforeground="#a3a3a3")
        self.source_path.configure(font="TkFixedFont")
        self.source_path.configure(foreground="#000000")
        self.source_path.configure(highlightbackground="#d9d9d9")
        self.source_path.configure(highlightcolor="black")
        self.source_path.configure(insertbackground="black")
        self.source_path.configure(relief="flat")
        self.source_path.configure(selectbackground="#c4c4c4")
        self.source_path.configure(selectforeground="black")
        self.source_path.configure(takefocus="0")

        self.Destination_path = tk.Entry(self.Frame_one)
        self.Destination_path.place(
            relx=0.227, rely=0.576, height=30, relwidth=0.584)
        self.Destination_path.configure(background="white")
        self.Destination_path.configure(disabledforeground="#a3a3a3")
        self.Destination_path.configure(font="TkFixedFont")
        self.Destination_path.configure(foreground="#000000")
        self.Destination_path.configure(highlightbackground="#d9d9d9")
        self.Destination_path.configure(highlightcolor="black")
        self.Destination_path.configure(insertbackground="black")
        self.Destination_path.configure(relief="flat")
        self.Destination_path.configure(selectbackground="#c4c4c4")
        self.Destination_path.configure(selectforeground="black")
        self.Destination_path.configure(takefocus="0")

        self.dest_path_btn = tk.Button(self.Frame_one)
        self.dest_path_btn.place(relx=0.81, rely=0.576, height=30, width=107)
        self.dest_path_btn.configure(activebackground="#ececec")
        self.dest_path_btn.configure(activeforeground="#000000")
        self.dest_path_btn.configure(background="#5d69d8")
        self.dest_path_btn.configure(command=imts.dest_file)
        self.dest_path_btn.configure(disabledforeground="")
        self.dest_path_btn.configure(
            font="-family {Gill Sans MT} -size 10 -weight bold")
        self.dest_path_btn.configure(foreground="#ffffff")
        self.dest_path_btn.configure(highlightbackground="#d9d9d9")
        self.dest_path_btn.configure(highlightcolor="black")
        self.dest_path_btn.configure(pady="0")
        self.dest_path_btn.configure(relief="flat")
        self.dest_path_btn.configure(takefocus="0")
        self.dest_path_btn.configure(text='''Select''')

        self.Label2_10 = tk.Label(self.Frame_one)
        self.Label2_10.place(relx=0.015, rely=0.16, height=31, width=144)
        self.Label2_10.configure(activebackground="#d3d3d3")
        self.Label2_10.configure(activeforeground="black")
        self.Label2_10.configure(anchor='w')
        self.Label2_10.configure(background="#e5e5e5")
        self.Label2_10.configure(disabledforeground="#a3a3a3")
        self.Label2_10.configure(
            font="-family {Proxima Nova Rg} -size 10 -weight bold")
        self.Label2_10.configure(foreground="#5d69d8")
        self.Label2_10.configure(highlightbackground="#d9d9d9")
        self.Label2_10.configure(highlightcolor="black")
        self.Label2_10.configure(text='''Select Image           :''')

        self.Label2_11 = tk.Label(self.Frame_one)
        self.Label2_11.place(relx=0.015, rely=0.56, height=31, width=144)
        self.Label2_11.configure(activebackground="#d3d3d3")
        self.Label2_11.configure(activeforeground="black")
        self.Label2_11.configure(anchor='w')
        self.Label2_11.configure(background="#e5e5e5")
        self.Label2_11.configure(disabledforeground="#a3a3a3")
        self.Label2_11.configure(
            font="-family {Proxima Nova Rg} -size 10 -weight bold")
        self.Label2_11.configure(foreground="#5d69d8")
        self.Label2_11.configure(highlightbackground="#d9d9d9")
        self.Label2_11.configure(highlightcolor="black")
        self.Label2_11.configure(text='''Output Destination  :''')

        self.Canvas1 = tk.Canvas(top)
        self.Canvas1.place(relx=0.014, rely=0.465,
                           relheight=0.518, relwidth=0.629)
        self.Canvas1.configure(background="#e5e5e5")
        self.Canvas1.configure(borderwidth="2")
        self.Canvas1.configure(highlightbackground="#e5e5e5")
        self.Canvas1.configure(highlightcolor="black")
        self.Canvas1.configure(insertbackground="black")
        self.Canvas1.configure(insertontime="700")
        self.Canvas1.configure(selectbackground="#c4c4c4")
        self.Canvas1.configure(selectforeground="black")
        self.Canvas1.configure(takefocus="0")

        self.Label2_3 = tk.Label(top)
        self.Label2_3.place(relx=0.357, rely=0.403, height=21, width=214)
        self.Label2_3.configure(activebackground="#f9f9f9")
        self.Label2_3.configure(activeforeground="black")
        self.Label2_3.configure(background="#ffffff")
        self.Label2_3.configure(disabledforeground="#a3a3a3")
        self.Label2_3.configure(
            font="-family {Gill Sans MT} -size 21 -weight bold")
        self.Label2_3.configure(foreground="#5d69d8")
        self.Label2_3.configure(highlightbackground="#d9d9d9")
        self.Label2_3.configure(highlightcolor="black")
        self.Label2_3.configure(text='''Preview''')

        self.menubar = tk.Menu(top, font=font9, bg=_bgcolor, fg=_fgcolor)
        top.configure(menu=self.menubar)

        self.apply_btn = tk.Frame(top)
        self.apply_btn.place(relx=0.66, rely=0.465,
                             relheight=0.519, relwidth=0.321)
        self.apply_btn.configure(relief='flat')
        self.apply_btn.configure(borderwidth="1")
        self.apply_btn.configure(background="#e5e5e5")
        self.apply_btn.configure(highlightbackground="#d9d9d9")
        self.apply_btn.configure(highlightcolor="black")

        self.Label2_9 = tk.Label(self.apply_btn)
        self.Label2_9.place(relx=0.044, rely=0.03, height=31, width=194)
        self.Label2_9.configure(activebackground="#d3d3d3")
        self.Label2_9.configure(activeforeground="black")
        self.Label2_9.configure(background="#e5e5e5")
        self.Label2_9.configure(disabledforeground="#a3a3a3")
        self.Label2_9.configure(
            font="-family {Proxima Nova Rg} -size 22 -weight bold")
        self.Label2_9.configure(foreground="#5d69d8")
        self.Label2_9.configure(highlightbackground="#d9d9d9")
        self.Label2_9.configure(highlightcolor="black")
        self.Label2_9.configure(text='''Select Effect''')

        self.Intensity = tk.Scale(self.apply_btn, from_=0.0, to=100.0)
        self.Intensity.place(relx=0.044, rely=0.687, relwidth=0.844,
                             relheight=0.0, height=35, bordermode='ignore')
        self.Intensity.configure(activebackground="#f9f9f9")
        self.Intensity.configure(background="#e5e5e5")
        self.Intensity.configure(borderwidth="0")
        # self.Intensity.configure(command=imts.intensity_range)
        self.Intensity.bind('<ButtonRelease>', imts.intensity_range)
        self.Intensity.configure(font="-family {Segoe UI} -size 9")
        self.Intensity.configure(foreground="#000000")
        self.Intensity.configure(highlightbackground="#d9d9d9")
        self.Intensity.configure(highlightcolor="black")
        self.Intensity.configure(highlightthickness="0")
        self.Intensity.configure(orient="horizontal")
        self.Intensity.configure(sliderlength="20")
        self.Intensity.configure(sliderrelief="ridge")
        self.Intensity.configure(troughcolor="#fff")

        self.Horizontal_Blurr_Check = tk.Checkbutton(self.apply_btn)
        self.Horizontal_Blurr_Check.place(
            relx=0.498, rely=0.164, relheight=0.045, relwidth=0.458)
        self.Horizontal_Blurr_Check.configure(activebackground="#f9f9f9")
        self.Horizontal_Blurr_Check.configure(activeforeground="#000000")
        self.Horizontal_Blurr_Check.configure(background="#e5e5e5")
        # self.Horizontal_Blurr_Check.configure(command=imts.horizontal_blurr_check)
        self.Horizontal_Blurr_Check.configure(disabledforeground="#a3a3a3")
        self.Horizontal_Blurr_Check.configure(foreground="#000000")
        self.Horizontal_Blurr_Check.configure(highlightbackground="#d9d9d9")
        self.Horizontal_Blurr_Check.configure(highlightcolor="black")
        self.Horizontal_Blurr_Check.configure(justify='left')
        self.Horizontal_Blurr_Check.configure(text='''Horizontal Blurr''')
        self.Horizontal_Blurr_Check.configure(variable=imts.che50)

        self.Vertical_Blurr_Check = tk.Checkbutton(self.apply_btn)
        self.Vertical_Blurr_Check.place(
            relx=0.027, rely=0.164, relheight=0.045, relwidth=0.4)
        self.Vertical_Blurr_Check.configure(activebackground="#f8f8f8")
        self.Vertical_Blurr_Check.configure(activeforeground="#000000")
        self.Vertical_Blurr_Check.configure(background="#e5e5e5")
        # self.Vertical_Blurr_Check.configure(command=imts.vertical_blurr_check)
        self.Vertical_Blurr_Check.configure(disabledforeground="#a3a3a3")
        self.Vertical_Blurr_Check.configure(foreground="#000000")
        self.Vertical_Blurr_Check.configure(highlightbackground="#d9d9d9")
        self.Vertical_Blurr_Check.configure(highlightcolor="black")
        self.Vertical_Blurr_Check.configure(justify='left')
        self.Vertical_Blurr_Check.configure(text='''Vertical Blurr''')
        self.Vertical_Blurr_Check.configure(variable=imts.che49)

        self.Sharpness_Check = tk.Checkbutton(self.apply_btn)
        self.Sharpness_Check.place(
            relx=0.0, rely=0.272, relheight=0.045, relwidth=0.4)
        self.Sharpness_Check.configure(activebackground="#f8f8f8")
        self.Sharpness_Check.configure(activeforeground="#000000")
        self.Sharpness_Check.configure(background="#e5e5e5")
        # self.Sharpness_Check.configure(command=imts.sharpness_check)
        self.Sharpness_Check.configure(disabledforeground="#a3a3a3")
        self.Sharpness_Check.configure(foreground="#000000")
        self.Sharpness_Check.configure(highlightbackground="#d9d9d9")
        self.Sharpness_Check.configure(highlightcolor="black")
        self.Sharpness_Check.configure(justify='left')
        self.Sharpness_Check.configure(text='''Sharpness''')
        self.Sharpness_Check.configure(variable=imts.che51)

        self.Label2_7 = tk.Label(self.apply_btn)
        self.Label2_7.place(relx=0.311, rely=0.606, height=21, width=84)
        self.Label2_7.configure(activebackground="#d3d3d3")
        self.Label2_7.configure(activeforeground="black")
        self.Label2_7.configure(background="#e5e5e5")
        self.Label2_7.configure(disabledforeground="#a3a3a3")
        self.Label2_7.configure(
            font="-family {Proxima Nova Rg} -size 14 -weight bold")
        self.Label2_7.configure(foreground="#5d69d8")
        self.Label2_7.configure(highlightbackground="#d9d9d9")
        self.Label2_7.configure(highlightcolor="black")
        self.Label2_7.configure(text='''Intensity''')

        self.edge_detect_radio = tk.Radiobutton(self.apply_btn)
        self.edge_detect_radio.place(
            relx=0.489, rely=0.26, relheight=0.087, relwidth=0.418)
        self.edge_detect_radio.configure(activebackground="#d9d9d9")
        self.edge_detect_radio.configure(activeforeground="#000000")
        self.edge_detect_radio.configure(background="#e5e5e5")
        self.edge_detect_radio.configure(command=imts.edge_detect)
        self.edge_detect_radio.configure(disabledforeground="#d9d9d9")
        self.edge_detect_radio.configure(
            font="-family {Gill Sans MT} -size 10")
        self.edge_detect_radio.configure(foreground="#000000")
        self.edge_detect_radio.configure(highlightbackground="#d9d9d9")
        self.edge_detect_radio.configure(highlightcolor="black")
        self.edge_detect_radio.configure(justify='left')
        self.edge_detect_radio.configure(text='''Edge Detect''')
        self.edge_detect_radio.configure(value="1")
        self.edge_detect_radio.configure(variable=imts.radio)

        self.face_detect_radio = tk.Radiobutton(self.apply_btn)
        self.face_detect_radio.place(
            relx=0.022, rely=0.37, relheight=0.075, relwidth=0.391)
        self.face_detect_radio.configure(activebackground="#ececec")
        self.face_detect_radio.configure(activeforeground="#000000")
        self.face_detect_radio.configure(background="#e5e5e5")
        self.face_detect_radio.configure(command=imts.face_detect)
        self.face_detect_radio.configure(disabledforeground="#a3a3a3")
        self.face_detect_radio.configure(foreground="#000000")
        self.face_detect_radio.configure(highlightbackground="#d9d9d9")
        self.face_detect_radio.configure(highlightcolor="black")
        self.face_detect_radio.configure(justify='left')
        self.face_detect_radio.configure(text='''Face Detect''')
        self.face_detect_radio.configure(value="2")
        self.face_detect_radio.configure(variable=imts.radio)

        self.face_blurr = tk.Radiobutton(self.apply_btn)
        self.face_blurr.place(relx=0.489, rely=0.373,
                              relheight=0.075, relwidth=0.347)
        self.face_blurr.configure(activebackground="#ececec")
        self.face_blurr.configure(activeforeground="#000000")
        self.face_blurr.configure(background="#e5e5e5")
        self.face_blurr.configure(command=imts.blurr_face)
        self.face_blurr.configure(disabledforeground="#a3a3a3")
        self.face_blurr.configure(foreground="#000000")
        self.face_blurr.configure(highlightbackground="#d9d9d9")
        self.face_blurr.configure(highlightcolor="black")
        self.face_blurr.configure(justify='left')
        self.face_blurr.configure(offrelief="flat")
        self.face_blurr.configure(text='''Blurr Face''')
        self.face_blurr.configure(value="3")
        self.face_blurr.configure(variable=imts.radio)

        self.save_btn = tk.Button(self.apply_btn)
        self.save_btn.place(relx=0.098, rely=0.845, height=30, width=79)
        self.save_btn.configure(activebackground="#ececec")
        self.save_btn.configure(activeforeground="#000000")
        self.save_btn.configure(background="#5d69d8")
        self.save_btn.configure(command=imts.save_btn)
        self.save_btn.configure(disabledforeground="#a3a3a3")
        self.save_btn.configure(
            font="-family {Gill Sans MT} -size 10 -weight bold")
        self.save_btn.configure(foreground="#ffffff")
        self.save_btn.configure(highlightbackground="#d9d9d9")
        self.save_btn.configure(highlightcolor="black")
        self.save_btn.configure(pady="0")
        self.save_btn.configure(relief="flat")
        self.save_btn.configure(text='''Save''')

        self.reset_btn = tk.Button(self.apply_btn)
        self.reset_btn.place(relx=0.542, rely=0.842, height=30, width=79)
        self.reset_btn.configure(activebackground="#ececec")
        self.reset_btn.configure(activeforeground="#000000")
        self.reset_btn.configure(background="#5d69d8")
        self.reset_btn.configure(command=imts.reset_btn)
        self.reset_btn.configure(disabledforeground="#a3a3a3")
        self.reset_btn.configure(
            font="-family {Gill Sans MT} -size 10 -weight bold")
        self.reset_btn.configure(foreground="#ffffff")
        self.reset_btn.configure(highlightbackground="#d9d9d9")
        self.reset_btn.configure(highlightcolor="black")
        self.reset_btn.configure(pady="0")
        self.reset_btn.configure(relief="flat")
        self.reset_btn.configure(text='''Reset''')


if __name__ == '__main__':
    vp_start_gui()
